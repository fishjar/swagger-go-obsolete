<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<contextName>Logback For demo</contextName>
	<!-- 多环境设置 -->
	<springProfile name="local">
		<property name="LOG_PATH" value="/var/log/xy-demo" />
	</springProfile>
	<springProfile name="dev,test">
		<property name="LOG_PATH" value="/var/log/xy-demo" />
	</springProfile>
	<springProfile name="prod">
		<property name="LOG_PATH" value="/var/log/xy-demo" />
	</springProfile>
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符-->
			<pattern>%red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger) - %cyan(%msg%n)</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 ,每天保存（侧翻）一次 -->
			<FileNamePattern>${LOG_PATH}/demo-%d{yyyy-MM-dd}.log</FileNamePattern>
			<!--日志文件保留天数 -->
			<MaxHistory>60</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{25} -%msg%n</pattern>
		</encoder>
	</appender>
	<!-- 运用的场景比如，你只需要com.demo.controller包下的error日志输出。定义好name="com.demo.controller" level="ERROR" 就行了 -->
	<logger name="com" level="INFO">
		<appender-ref ref="ROLLING_FILE" />
	</logger>
	<!-- 全局，控制台遇到INFO及以上级别就进行输出 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
	</root>
</configuration>