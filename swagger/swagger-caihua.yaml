---
swagger: "2.0"
info:
  version: "0.0.1"
  title: "Hello World App"
host: "localhost:3000"
basePath: "/"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
  JWT:
    description: "Authorization: Bearer {token}"
    type: "apiKey"
    name: "Authorization"
    in: "header"
security:
  - APIKeyHeader: []
    JWT: []
paths:
  /account/login:
    post:
      summary: "登录"
      description: "登录..."
      security: []
      parameters:
      - in: "body"
        name: "body"
        description: "登录参数"
        required: true
        schema:
          $ref: "#/definitions/LoginBody"
      responses:
        "200":
          description: "登录成功"
          schema:
            $ref: "#/definitions/LoginResponse"
  /account/user:
    get:
      summary: "查询当前用户"
      description: "查询当前用户.."
      responses:
        "200":
          description: "查询成功"
          headers:
            authtoken:
              type: string
              description: 新token续期
          schema:
            $ref: "#/definitions/UserDemo"
        "401":
          $ref: "#/responses/Unauthorized"
        "404":
          $ref: "#/responses/NotFound"
  /foos:
    post:
      summary: "创建单个"
      description: "创建单个..."
      parameters:
      - in: "body"
        name: "body"
        description: "模型参数"
        required: true
        schema:
          $ref: "#/definitions/Foo"
      responses:
        "200":
          description: "创建成功"
    get:
      summary: "查询集合"
      description: "查询集合..."
      parameters:
      - in: "query"
        name: "page_num"
        type: "integer"
        description: "页码"
        default: 1
      - in: "query"
        name: "page_size"
        type: "integer"
        description: "分页大小"
        default: 10
      - in: "query"
        name: "sorter"
        type: "string"
        description: "排序(created_at__desc)"
        # pattern: "^\w+__\w+$"
      responses:
        "200":
          description: "查询成功"
          schema:
            type: "object"
            properties:
              count:
                type: "integer"
              rows:
                type: "array"
                items:
                  $ref: "#/definitions/Foo"
    patch:
      summary: "更新集合"
      description: "更新集合..."
      parameters:
      - in: "body"
        name: "body"
        description: "body参数"
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Foo"
      responses:
        "200":
          description: "更新成功"
    delete:
      summary: "删除集合"
      description: "删除集合..."
      parameters:
      - in: "body"
        name: "body"
        description: "body参数"
        schema:
          type: "object"
          example:
            id: ["1","2"]
      responses:
        "200":
          description: "更新成功"
  /foos/{id}:
    get:
      summary: "查询单个"
      description: "查询单个.."
      parameters:
      - in: "path"
        name: "id"
        type: "string"
        required: true
        description: "ID"
      responses:
        "200":
          description: "查询成功"
          schema:
            $ref: "#/definitions/Foo"
    patch:
      summary: "修改单个"
      description: "修改单个.."
      parameters:
      - in: "path"
        name: "id"
        type: "string"
        required: true
        description: "ID"
      - in: "body"
        name: "body"
        description: "模型参数"
        required: true
        schema:
          $ref: "#/definitions/Foo"
      responses:
        "200":
          description: "修改成功"
    delete:
      summary: "删除单个"
      description: "删除单个.."
      parameters:
      - in: "path"
        name: "id"
        type: "string"
        required: true
        description: "ID"
      responses:
        "200":
          description: "删除成功"
  /foos/multiple:
    post:
      summary: "创建集合"
      description: "创建集合..."
      parameters:
      - in: "body"
        name: "body"
        description: "body参数"
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Foo"
      responses:
        "200":
          description: "创建成功"
  /foo:
    get:
      summary: "查询单个"
      description: "查询单个.."
      parameters:
      - in: "query"
        name: "id"
        type: "string"
        required: true
        description: "可以是任意参数"
      responses:
        "200":
          description: "查询成功"
          schema:
            $ref: "#/definitions/Foo"
    post:
      summary: "查找或创建单个"
      description: "查找或创建单个..."
      parameters:
      - in: "body"
        name: "body"
        description: "模型参数"
        required: true
        schema:
          $ref: "#/definitions/Foo"
      responses:
        "200":
          description: "创建成功"
          schema:
            $ref: "#/definitions/Foo"
definitions:
  Caiuser:
    type: "object"
    x-isModel: true
    x-plural: "Caiusers"
    x-tableName: "caiuser"
    description: "业务用户"
    required:
      - "id"
      - "user_id"
      - "nickname"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "ID"
        uniqueItems: true
      user_id:
        type: "string"
        format: "uuid"
        description: "用户ID"
        x-message: "请输入"
        x-showTable: true
      nickname:
        type: "string"
        format: "string(64)"
        description: "昵称"
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
      avatar:
        type: "string"
        format: "string(255)"
        description: "头像"
        x-message: "请输入"
        x-showTable: true
      level:
        type: "integer"
        format: "int4"
        description: "级别"
        default: 0
        minimum: 0
        maximum: 100
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
      level_title:
        type: "string"
        format: "string(64)"
        description: "级别称呼"
        x-message: "请输入"
        x-showTable: true
      score:
        type: "integer"
        format: "int4"
        description: "得分"
        default: 0
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
      question_count:
        type: "integer"
        format: "int4"
        description: "问题数目"
        default: 0
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
      right_count:
        type: "integer"
        format: "int4"
        description: "正确数目"
        default: 0
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
    example:
      id: "123"
      user_id: '1231232'
      nickname: "foo"
  Exam:
    type: "object"
    x-isModel: true
    x-plural: "Exams"
    x-tableName: "exam"
    description: "测验"
    required:
      - "id"
      - "user_id"
      - "exam_type"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "ID"
        uniqueItems: true
      user_id:
        type: "string"
        format: "uuid"
        description: "用户ID"
        x-message: "请输入"
        x-showTable: true
      exam_type:
        type: "string"
        format: "string(8)"
        description: "测验类型"
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
      exam_level:
        type: "string"
        format: "string(8)"
        description: "测验级别"
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
      end_time:
        type: "string"
        format: "date-time"
        description: "结束时间"
        x-message: "请选择"
        x-showTable: true
        x-showSorter: true
      question_count:
        type: "integer"
        format: "int4"
        description: "问题数目"
        default: 0
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
      right_count:
        type: "integer"
        format: "int4"
        description: "正确数目"
        default: 0
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
    example:
      id: "123"
      user_id: "123321"
      exam_type: "en_en"
      exam_level: "CET4"
  Question:
    type: "object"
    x-isModel: true
    x-plural: "Questions"
    x-tableName: "question"
    description: "问题"
    required:
      - "id"
      - "exam_id"
      - "word"
      - "question_no"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "ID"
        uniqueItems: true
      exam_id:
        type: "string"
        format: "uuid"
        description: "用户ID"
        x-message: "请输入"
        x-showTable: true
      word:
        type: "string"
        format: "string(255)"
        description: "题目文字"
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
      question_no:
        type: "integer"
        format: "int4"
        description: "题目序号"
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
      end_time:
        type: "string"
        format: "date-time"
        description: "结束时间"
        x-message: "请选择"
        x-showTable: true
        x-showSorter: true
      if_right:
        type: "boolean"
        format: "boolean"
        description: "是否匹配"
        default: false
        x-message: "请选择"
        x-showTable: true
        x-showFilter: true
    example:
      id: "123"
      exam_id: "123321"
      word: "hello"
      question_no: 1
  Answer:
    type: "object"
    x-isModel: true
    x-plural: "Answers"
    x-tableName: "answer"
    description: "回答"
    required:
      - "id"
      - "question_id"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "ID"
        uniqueItems: true
      user_id:
        type: "string"
        format: "uuid"
        description: "用户ID"
        x-message: "请输入"
        x-showTable: true
      question_id:
        type: "string"
        format: "uuid"
        description: "问题ID"
        x-message: "请输入"
        x-showTable: true
      answer:
        type: "string"
        format: "string(255)"
        description: "回答语音地址"
        x-message: "请输入"
      answer_time:
        type: "integer"
        format: "int4"
        description: "语音时长"
        x-message: "请输入"
        x-showTable: true
        x-showFilter: true
        x-showSorter: true
      answer_words:
        type: "object"
        format: "object"
        description: "语音识别文字"
        x-message: "请输入"
        x-showTable: true
      reply_time:
        type: "string"
        format: "date-time"
        description: "回答时间"
        x-message: "请选择"
        x-showTable: true
        x-showSorter: true
      if_right:
        type: "boolean"
        format: "boolean"
        description: "是否匹配"
        default: false
        x-message: "请选择"
        x-showTable: true
        x-showFilter: true
    example:
      id: "123"
      question_id: "123321"
  UserDemo:
    type: "object"
    description: "用户模型"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "ID"
      name:
        type: "string"
        description: "用户名"
      avatar:
        type: "string"
        description: "头像"
      email:
        type: "string"
        description: "邮箱"
    example:
      name: 'Admin'
      avatar: 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'
      id: '00000001'
      email: 'test@test.com'
  LoginBody:
    type: "object"
    description: "登录参数模型"
    required:
      - "userName"
      - "password"
      - "type"
    properties:
      userName:
        type: "string"
        description: "用户名"
      password:
        type: "string"
        description: "密码"
      type:
        type: "string"
        description: "账户类型"
    example:
      userName: 'admin'
      password: '123456'
      type: 'username'
  LoginResponse:
    type: "object"
    description: "登录返回数据模型"
    required:
      - "status"
      - "type"
      - "currentAuthority"
      - "authtoken"
    properties:
      status:
        type: "string"
        description: "登录状态"
      type:
        type: "string"
        description: "账号类型"
      currentAuthority:
        type: "string"
        description: "当前角色"
      authtoken:
        type: "string"
        description: "秘钥"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
      errors:
        type: "array"
        items:
          $ref: '#/definitions/ErrorItem'
    required:
      - "message"
  ErrorItem:
    type: "object"
    properties:
      errcode:
        type: "integer"
      errmsg:
        type: "string"
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: "#/definitions/Error"
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: "#/definitions/Error"
      
      
