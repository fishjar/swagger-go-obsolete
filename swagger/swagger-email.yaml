---
swagger: "2.0"
info:
  version: "0.0.1"
  title: "Hello World App"
host: "localhost:3000"
basePath: "/"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
  JWT:
    description: "Authorization: Bearer {token}"
    type: "apiKey"
    name: "Authorization"
    in: "header"
security:
  - APIKeyHeader: []
    JWT: []
paths:
  /account/login:
    post:
      summary: "登录"
      description: "登录..."
      security: []
      parameters:
      - in: "body"
        name: "body"
        description: "登录参数"
        required: true
        schema:
          $ref: "#/definitions/LoginBody"
      responses:
        "200":
          description: "登录成功"
          schema:
            $ref: "#/definitions/LoginResponse"
  /account/user:
    get:
      summary: "查询当前用户"
      description: "查询当前用户.."
      responses:
        "200":
          description: "查询成功"
          headers:
            authtoken:
              type: string
              description: 新token续期
          schema:
            $ref: "#/definitions/UserDemo"
        "401":
          $ref: "#/responses/Unauthorized"
        "404":
          $ref: "#/responses/NotFound"
definitions:
  Email:
    type: "object"
    x-isModel: true
    x-plural: "Emails"
    x-tableName: "email"
    description: "邮件"
    required:
      - "id"
      - "sender"
      - "receivers"
      - "subject"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "ID"
        uniqueItems: true
      sender:
        type: "string"
        format: "string(128)"
        description: "仓库编号"
        x-message: "请输入"
        x-showTable: true
      receivers:
        type: "string"
        format: "string(255)"
        description: "仓库编号"
        x-message: "请输入"
        x-showTable: true
      subject:
        type: "string"
        format: "string(255)"
        description: "仓库编号"
        x-message: "请输入"
        x-showTable: true
      text_body:
        type: "string"
        format: "text"
        description: "仓库编号"
        x-message: "请输入"
        x-showTable: true
      html_body:
        type: "string"
        format: "text"
        description: "仓库编号"
        x-message: "请输入"
        x-showTable: true
      send_time:
        type: "string"
        format: "date-time"
        description: "发送时间"
        x-message: "请选择"
        x-showTable: true
        x-showSorter: true
      status:
        type: "integer"
        format: "int4"
        enum: [1,2,3]
        default: 1
        x-message: "请选择"
        x-showTable: true
        x-showFilter: true
        x-enumMap: {
          1: "默认",
          2: "发送成功",
          3: "发送失败",
        }
        x-description: "状态"
        description: >
          "状态"
            * 1 - 默认
            * 2 - 发送成功
            * 3 - 发送失败
    example:
      id: "123"
      "sender": "sender@test.com"
      "receivers": "receivers@test.com"
      "subject": "hello"
      "text_body": "how are you?"
  UserDemo:
    type: "object"
    description: "用户模型"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
        description: "ID"
      name:
        type: "string"
        description: "用户名"
      avatar:
        type: "string"
        description: "头像"
      email:
        type: "string"
        description: "邮箱"
    example:
      name: 'Admin'
      avatar: 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'
      id: '00000001'
      email: 'test@test.com'
  LoginBody:
    type: "object"
    description: "登录参数模型"
    required:
      - "userName"
      - "password"
      - "type"
    properties:
      userName:
        type: "string"
        description: "用户名"
      password:
        type: "string"
        description: "密码"
      type:
        type: "string"
        description: "账户类型"
    example:
      userName: 'admin'
      password: '123456'
      type: 'username'
  LoginResponse:
    type: "object"
    description: "登录返回数据模型"
    required:
      - "status"
      - "type"
      - "currentAuthority"
      - "authtoken"
    properties:
      status:
        type: "string"
        description: "登录状态"
      type:
        type: "string"
        description: "账号类型"
      currentAuthority:
        type: "string"
        description: "当前角色"
      authtoken:
        type: "string"
        description: "秘钥"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
      errors:
        type: "array"
        items:
          $ref: '#/definitions/ErrorItem'
    required:
      - "message"
  ErrorItem:
    type: "object"
    properties:
      errcode:
        type: "integer"
      errmsg:
        type: "string"
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: "#/definitions/Error"
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: "#/definitions/Error"
      
      
